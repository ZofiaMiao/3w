@charset "UTF-8";

// 圆角
@mixin border-radius($val) {
  border-radius: $val;
  -moz-border-radius: $val;
  -webkit-border-radius: $val;
}

// 超出指定行数部分省略号显示
@mixin line-clamp($line) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
  overflow: hidden;
}

// 超出一行部分省略号显示
@mixin ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin flex() {
  display: -webkit-flex;
  display: flex;
}

// 水平垂直居中
@mixin center() {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

// 阴影
@mixin shadow($val) {
  -webkit-box-shadow: $val;
  -moz-box-shadow: $val;
  box-shadow: $val;
}

// 动画过渡效果
@mixin transition($prop) {
  -webkit-transition: $prop;
  -moz-transition: $prop;
  -ms-transition: $prop;
  -o-transition: $prop;
  transition: $prop;
}

$inline-block-alignment: middle !default;

// 并列布局
@mixin inline-block($alignment: $inline-block-alignment) {
  display: inline-block;
  @if $alignment and $alignment != none {
    vertical-align: $alignment;
  }
  @if $legacy-support-for-ie {
    *vertical-align: auto;
    zoom: 1;
    *display: inline;
  }
}

%inline-block {
  @include inline-block();
}

// 浮动
@mixin float($side:left) {
  float: unquote($side);
  @if $legacy-support-for-ie {
    _display: inline;
  }
}

//左浮动
@mixin pull-left {
  @include float(left);
}

%pull-left {
  @include float(left);
}

//右浮动
@mixin pull-right {
  @include float(right);
}

%pull-right {
  @include float(right);
}

// 重置浮动
@mixin reset-float($display:block) {
  float: none;
  display: $display;
}

// 清除浮动
@mixin clearfix {
  @if $legacy-support-for-ie {
    *zoom: 1;
  }
  &:before, &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
    overflow: hidden;
  }
}

// 透明度
@mixin opacity($opacity:50) {
  opacity: $opacity / 100;
  -moz-opacity: $opacity; /* 老版Mozilla */
  -khtml-opacity: $opacity; /* 老版Safari */

  @if $legacy-support-for-ie {
    filter: alpha(opacity=$opacity);
  }
}

// 最小调试
@mixin min-height($height) {
  min-height: $height;
  height: auto !important;
  @if $legacy-support-for-ie {
    _height: $height;
  }
}

@mixin box-sizing{
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}